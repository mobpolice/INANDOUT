<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>

<mapper namespace="com.ino.sales.dao.SalesDAO">
		
	<select id="getUserSido" parameterType="String" resultType="String">
		SELECT verified_sido FROM verified_area va WHERE va.user_id = #{loginId}
	</select>
	
	<select id="getUserSigungu" parameterType="String" resultType="String">
		SELECT verified_sigungu FROM verified_area va WHERE va.user_id = #{loginId}
	</select>
	
	<select id="salesList" resultType="com.ino.sales.dto.SalesDTO" parameterType="HashMap">
		SELECT s.sales_no, s.sales_state, s.subject, s.price, s.sales_sido, s.sigungu, s.hit, s.attention, s.user_id, u.nickname, s.date, p.new_photo_name, s.biz_id, b.biz_name, s.goods_id, g.goods_name
			FROM sales s 
			LEFT JOIN user u ON s.user_id = u.user_id
			LEFT JOIN photo p ON p.photo_div = s.sales_no AND p.cate_no = 'p005'
			LEFT JOIN biz b ON s.biz_id = b.biz_id 
			LEFT JOIN goods g ON s.goods_id = g.goods_id 
			WHERE s.blind = '0' AND (s.sales_state = '판매중' OR s.sales_state = '판매완료')
		<if test='sido != null  and !sido.equals("default")'>
			AND s.sales_sido = #{sido}
		</if>
		<if test='sigungu != null  and !sigungu.equals("default")'>
			AND s.sigungu LIKE CONCAT('%', #{sigungu}, '%')
		</if>
		<if test='biz_id != null  and !biz_id.equals("default")'>
			AND s.biz_id = #{biz_id}
		</if>
		<if test='goods_id != null and !goods_id.equals("default")'>
			AND s.goods_id = #{goods_id}
		</if>
		<if test='minPrice != null  and !minPrice.equals("default")'>
			AND s.price >= #{minPrice}
		</if>
		<if test='maxPrice != null  and !maxPrice.equals("default")'>
			<![CDATA[ AND s.price <= #{maxPrice} ]]>	
		</if>
		<choose>
			<when test="filterName == 'sales_no'">
				GROUP BY s.sales_no ORDER BY s.sales_no DESC
			</when>
			<when test="filterName == 'hit'">
				GROUP BY s.sales_no ORDER BY s.hit DESC
			</when>
			<otherwise>
				GROUP BY s.sales_no ORDER BY s.sales_no DESC
			</otherwise>
		</choose>
		LIMIT ${cnt} OFFSET ${offset}
	</select>
	
	<select id="getBiz_name" parameterType="String" resultType="String">
		SELECT b.biz_name FROM biz b WHERE b.biz_id = #{biz_id}
	</select>
		
	<select id="getBizList" resultType="com.ino.sales.dto.BizDTO">
		SELECT * FROM biz
	</select>
	
	<select id="goodsCall" parameterType="String" resultType="com.ino.sales.dto.goodsDTO">
		SELECT * FROM goods WHERE biz_id = #{biz_id}
	</select>
	
	<insert 
		useGeneratedKeys="true"
		keyColumn="sales_no"
		keyProperty="sales_no"
		id="salesWrite" parameterType="com.ino.sales.dto.SalesDTO"
	>
		INSERT INTO sales(user_id, subject, price, post_num, sales_sido, sigungu, left_addr, content, sales_state, blind, biz_id, goods_id, hit, attention)
			VALUES(#{user_id}, #{subject}, #{price}, #{post_num}, #{sales_sido}, #{sigungu}, #{left_addr}, #{content}, #{sales_state}, #{blind}, #{biz_id}, #{goods_id}, 0, 0)
	</insert>
	
	<insert id="fileWrite">
		INSERT INTO photo(ori_photo_name, new_photo_name, photo_div, cate_no)
			VALUES(#{param1}, #{param2}, #{param3}, #{param4})
	</insert>
	
	<update id="upHit" parameterType="Integer">
		UPDATE sales SET hit = hit + 1 WHERE sales_no = #{sales_no}
	</update>

	<select id="salesDetail" parameterType="Integer" resultType="com.ino.sales.dto.SalesDTO">
		SELECT s.*, b.biz_id, b.biz_name, g.goods_id, g.goods_name, u.nickname FROM sales s 
			LEFT JOIN biz b ON b.biz_id = s.biz_id 
			LEFT JOIN goods g ON g.goods_id = s.goods_id 
			LEFT JOIN `user` u ON u.user_id = s.user_id
		WHERE s.sales_no = #{sales_no}
	</select>

	<select id="salesDetailPhoto" parameterType="Integer" resultType="String">
		SELECT p.new_photo_name FROM photo p 
			INNER JOIN sales s ON s.sales_no = p.photo_div 
		AND p.cate_no = 'p005' AND s.sales_no = #{sales_no}
	</select>

	<update id="salesDelete" parameterType="String">
		UPDATE sales SET sales_state = '삭제됨' WHERE sales_no = #{sales_no}
	</update>
	
	<select id="attentionCheck" resultType="Integer">
		SELECT count(a.attention_no) FROM attention a WHERE a.attention_div = '판매글' AND a.attention_div_no = #{param2} AND a.user_id = #{param1}
	</select>
	
	<insert id="addAttention">
		INSERT INTO attention(attention_div_no, attention_div, user_id)VALUES(#{param2}, '판매글', #{param1})
	</insert>
	
	<update id="addSalesAttention">
		UPDATE sales SET attention = attention + 1 WHERE sales_no = #{param1}
	</update>
	
	<delete id="removeAttention">
		DELETE FROM attention WHERE attention_div_no = #{param2} AND attention_div = '판매글' AND user_id = #{param1}	
	</delete>
	
	<update id="removeSalesAttention">
		UPDATE sales SET attention = attention - 1 WHERE sales_no = #{param1}
	</update>

	<delete id="removeFileName" parameterType="String">
		DELETE FROM photo WHERE new_photo_name = #{fileName} AND cate_no = 'p005'
	</delete>
	
	<update id="salesUpdate" parameterType="HashMap">
		UPDATE sales SET subject = #{subject}
			,price = #{price}
			,content = #{content}
		<if test='postcode != null  and !postcode.equals("default")'>
			,post_num = #{postcode}
			,sales_sido = #{sido}
			,sigungu = #{sigungu}
			,left_addr = #{left_addr}
		</if>
		<if test='biz_id != null  and !biz_id.equals("default")'>
			,biz_id = #{biz_id}
			,goods_id = #{goods_id}
		</if>
		WHERE sales_no = #{sales_no}
	</update>
	
	<select id="salesTotalCount" parameterType="HashMap" resultType="Integer">
		SELECT COUNT(sales_no) AS cnt FROM (SELECT s.sales_no FROM sales s 
			LEFT JOIN user u ON s.user_id = u.user_id
			LEFT JOIN photo p ON p.photo_div = s.sales_no AND p.cate_no = 'p005'
			LEFT JOIN biz b ON s.biz_id = b.biz_id 
			LEFT JOIN goods g ON s.goods_id = g.goods_id 
			WHERE s.blind = '0' AND (s.sales_state = '판매중' OR s.sales_state = '판매완료')
		<if test='sido != null  and !sido.equals("default")'>
			AND s.sales_sido = #{sido}
		</if>
		<if test='sigungu != null  and !sigungu.equals("default")'>
			AND s.sigungu LIKE CONCAT('%', #{sigungu}, '%')
		</if>
		<if test='biz_id != null  and !biz_id.equals("default")'>
			AND s.biz_id = #{biz_id}
		</if>
		<if test='goods_id != null and !goods_id.equals("default")'>
			AND s.goods_id = #{goods_id}
		</if>
		<if test='minPrice != null  and !minPrice.equals("default")'>
			AND s.price >= #{minPrice}
		</if>
		<if test='maxPrice != null  and !maxPrice.equals("default")'>
			<![CDATA[ AND s.price <= #{maxPrice} ]]>	
		</if>
		GROUP BY s.sales_no) sales
	</select>
	
</mapper>