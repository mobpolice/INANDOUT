<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC   "-//mybatis.org//DTD Mapper 3.0//EN"
   "http://mybatis.org/dtd/mybatis-3-mapper.dtd"
>
<!-- xml 을 java 에서 쓰기 위해 연결되는 interface 가 필요 하다. -->

<!-- 쿼리문을 작성해둔 interface 주소 -->
<mapper namespace="com.ino.delivery.dao.RiderDAO">

	<select id="listRL" resultType="com.ino.delivery.dto.RiderDTO">
		select u.user_id, u.nickname, u.sido, u.sigungu, u.left_addr, re.store_time, p.new_photo_name from `user` u  
			left join rider_extra re 
			on u.user_id = re.user_id
			left join photo p 
			on p.photo_div = u.user_id
		where u.user_div = 'c'
		LIMIT #{param1} OFFSET #{param2}
	</select>
	
	<select id="totalCountRL" resultType="int">  
		SELECT COUNT(user_id) FROM `user` u where u.user_div = 'c';
	</select>
	

	<select id="dtoROD" resultType="com.ino.delivery.dto.RiderDTO">
		select avg(stp.star_score) as star_score, do.offer_date, p.new_photo_name, s.content, s.subject, s.sales_no, s.blind, s.user_id, do.delivery_offer_no, do.from_addr, do.to_addr, do.accept, do.all_show, u.user_id, u.nickname, u.sido, u.sigungu, u.left_addr, b.biz_name, g.goods_name from sales s 
			left join delivery_offer do 
			on do.sales_no = s.sales_no
			left join `user` u 
			on u.user_id = do.user_id
			left join biz b 
			ON b.biz_id = s.biz_id
			left join goods g 
			on g.goods_id = s.goods_id 
			left join photo p 
			on p.photo_div = s.user_id
			left join star s2 
			on s2.star_to_id = u.user_id
			left join star_test_paper stp 
			on s2.star_no = stp.star_no
		where (do.delivery_offer_no = #{param1} and p.new_photo_name is null)
		or (do.delivery_offer_no = #{param1} and p.new_photo_name is not null)
		GROUP BY do.delivery_offer_no	
	</select>
	
	<select id="listDH" resultType="com.ino.delivery.dto.RiderDTO">
		select dh.delivery_accept_no, dh.delivery_state, dh.delivery_time, do.delivery_offer_no, u.nickname, s.subject, p.new_photo_name, concat(s.sales_sido,' ' , s.sigungu,' ' , s.left_addr) as to_addr from delivery_history dh
			left join delivery_offer do 
			on dh.delivery_accept_no = do.delivery_offer_no
			left join `user` u 
			on do.user_id = u.user_id
			left join sales s 
			on do.sales_no = s.sales_no
			left join photo p 
			on p.photo_div = u.user_id
		where (dh.delivery_state = '배송완료' and p.new_photo_name is null) 
		or (dh.delivery_state = '배송완료' and p.new_photo_name is not null) 
		group by dh.delivery_accept_no
	</select>
	
	<select id="totalCountDH" resultType="int">  
		select count(do.delivery_offer_no) FROM delivery_history dh 
left join delivery_offer do 
on dh.delivery_accept_no = do.delivery_offer_no 
where dh.delivery_state = #{param1} and do.rider_id= #{param2}
	</select>
	
	<select id="listRO" resultType="com.ino.delivery.dto.RiderDTO">
		select do.delivery_offer_no,s.subject, u.user_id, u.nickname,do.from_addr,do.to_addr, do.accept, do.all_show from delivery_offer do 
			left join `user` u 
			on do.user_id = u.user_id
			left join sales s 
			on s.sales_no = do.sales_no 
		where do.all_show = 'as' and do.accept is null
		LIMIT #{param1} OFFSET #{param2}
	</select>
	
	<select id="totalCountRO" resultType="int">  
		select count(*) FROM delivery_offer do where accept is null
	</select>
	
	<select id="totalCountDS" resultType="int">
		SELECT count(dh.delivery_accept_no)FROM delivery_offer do
		LEFT JOIN 
		(SELECT delivery_accept_no, delivery_state, delivery_time FROM delivery_history WHERE delivery_state IS NOT NULL) dh 
		ON do.delivery_offer_no = dh.delivery_accept_no 
		LEFT JOIN `user` u 
		ON u.user_id = do.user_id WHERE (dh.delivery_accept_no, dh.delivery_time) IN (SELECT dh2.delivery_accept_no, MAX(dh2.delivery_time) FROM delivery_history dh2 
		WHERE dh2.delivery_state IS NOT NULL and do.rider_id = #{param1}
		GROUP BY dh2.delivery_accept_no )
		AND dh.delivery_state NOT IN ('배송완료', '배송실패')
		ORDER BY dh.delivery_time desc
	</select>
	
	<select id="listDS" resultType="com.ino.delivery.dto.RiderDTO">
		SELECT dh.delivery_accept_no, dh.delivery_state, do.delivery_offer_no, u.nickname, concat(u.sido, u.sigungu, u.left_addr) as from_addr, do.to_addr FROM delivery_offer do
		LEFT JOIN 
		(SELECT delivery_accept_no, delivery_state, delivery_time FROM delivery_history WHERE delivery_state IS NOT NULL) dh 
		ON do.delivery_offer_no = dh.delivery_accept_no 
		LEFT JOIN `user` u 
		ON u.user_id = do.user_id WHERE (dh.delivery_accept_no, dh.delivery_time) IN (SELECT dh2.delivery_accept_no, MAX(dh2.delivery_time) FROM delivery_history dh2 
		WHERE dh2.delivery_state IS NOT NULL and do.rider_id = #{param3}
		GROUP BY dh2.delivery_accept_no )
		AND dh.delivery_state NOT IN ('배송완료', '배송실패')
		ORDER BY dh.delivery_time DESC
		LIMIT #{param1} OFFSET #{param2}
	</select>
	
	<update id="deliveryUpdate" >
		update delivery_offer set accept = 1 where delivery_offer_no = #{param1}
	</update>
	
	<update id="deliveryNone">
		update delivery_offer set accept = 0 where delivery_offer_no = #{param1}
	</update>
	
	<insert id="deliveryInsert">
		insert into delivery_history(delivery_accept_no, delivery_state)
		values(#{param1},'배송접수');
	</insert>
	
	<select id="dtoUO" resultType="com.ino.delivery.dto.RiderDTO">
		select u.nickname, u.user_id, u.user_div, p.new_photo_name, avg(stp.star_score) as star_score from `user` u
			left join photo p
			on p.photo_div = u.user_id
			left join star s 
			on s.star_to_id = u.user_id 
			left join star_test_paper stp 
			on s.star_no = stp.star_no  
		where (u.user_div = 'c' and u.user_id = #{param1} and p.new_photo_name is null)
		or (u.user_div = 'c' and u.user_id = #{param1} and p.new_photo_name is not null)
		GROUP BY u.nickname, u.user_id, u.user_div, p.new_photo_name
		limit 1
	</select>
	 
	<select id="dtoUOS" resultType="com.ino.delivery.dto.RiderDTO">
		SELECT c.msg_div_no, s.user_id, s.sales_no, s.subject, s.content, b.biz_name, g.goods_name, p.new_photo_name, concat(s.sales_sido,' ' , s.sigungu,' ' , s.left_addr) as from_addr FROM sales s 
         LEFT JOIN biz b 
         ON s.biz_id = b.biz_id 
         LEFT JOIN goods g 
         ON s.goods_id = g.goods_id 
         LEFT JOIN photo p 
         ON s.user_id = p.photo_div 
         left join chatroom c
         on c.msg_div_no = s.sales_no
      WHERE (s.sales_no = #{param1} and p.new_photo_name is null)
      or (s.sales_no = #{param1} and p.new_photo_name is not null)
      limit 1
	</select>
	
	<insert id="selectAjax" parameterType="hashmap">
		insert into delivery_history (delivery_accept_no, delivery_state)
		values(#{delivery_accept_no}, #{delivery_state});
	</insert>
	
	<select id="filtering" resultType="com.ino.delivery.dto.RiderDTO">
		select dh.delivery_accept_no, dh.delivery_state, dh.delivery_time, do.delivery_offer_no, u.nickname, s.subject, p.new_photo_name, concat(s.sales_sido,' ' , s.sigungu,' ' , s.left_addr) as to_addr from delivery_history dh
			left join delivery_offer do 
			on dh.delivery_accept_no = do.delivery_offer_no
			left join `user` u 
			on do.user_id = u.user_id
			left join sales s 
			on do.sales_no = s.sales_no
			left join photo p 
			on p.photo_div = u.user_id
		where (dh.delivery_state = #{param1} and p.new_photo_name is null and do.rider_id = #{param2}) 
		or (dh.delivery_state = #{param1} and p.new_photo_name is not null and do.rider_id = #{param2})  
		group by dh.delivery_accept_no
	</select>
	
	<insert id="writeUO" parameterType="hashmap">
		insert into delivery_offer (sales_no, rider_id, user_id, from_addr, to_addr, accept, all_show)	
		values(#{sales_no},#{rider_id},#{user_id},#{from_addr},#{to_addr}, null, 'as'); 
	</insert>
	
	<select id="userC" resultType="string">
		SELECT user_div FROM user
		WHERE user_id =  #{param1}
	</select>
	
	<select id="mystar" resultType="Integer">
		SELECT AVG(star_score) FROM star_test_paper
		WHERE star_no IN (SELECT star_no FROM star s2 WHERE star_to_id=#{param1})
		<!-- 로그인 기능 넣으면 여기에 where절 넣어서 수정해야함 -->
	</select>
	
	<select id="getPhotoName" resultType="String">
		SELECT p.new_photo_name FROM photo p WHERE p.photo_div = #{param1} AND cate_no=#{param2}
	</select>
	
	<select id="rideroffer" resultType="int">
		SELECT COUNT(delivery_offer_no) FROM delivery_offer WHERE rider_id=#{param1} 
	</select>
	
	<select id="riderdelivery" resultType="int">
		SELECT COUNT(delivery_state) from delivery_history dh WHERE dh.delivery_accept_no IN (select delivery_offer_no 
		FROM delivery_offer where rider_id=#{param1} ) AND delivery_state =#{param2}
	</select>
	
	<select id="mypage" resultType="com.ino.delivery.dto.RiderDTO">
		SELECT * FROM user WHERE user_id=#{param1}
	</select>
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
	
</mapper>